{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
		"uniqueDnsName": {
		  "type": "string",
		  "defaultValue": "testalbotrafmgr1",
		  "metadata": {
			"description": "Relative DNS name for the traffic manager profile, resulting FQDN will be <uniqueDnsName>.trafficmanager.net, must be globally unique."
		  }
		},
        "adminUsername": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
		"ApplicationGatewayPublicDNSName": {
            "type": "string",
            "minLength": 8,
			"defaultValue": "testalbogtw1",
            "metadata": {
                "description": "Application Gateway DNS Name"
            }
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2016-Datacenter",
            "allowedValues": [
                "2012-R2-Datacenter",
                "2016-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2012-R2-Datacenter, 2016-Datacenter."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_D1_v2",
                "Standard_D2_v2",
                "Standard_D3_v2"
            ],
            "metadata": {
                "description": "The virtual machine size. Allowed values: Standard_A1, Standard_A2, Standard_A3."
            }
        },
		"SQLserverName": {
            "type": "string",
			"defaultValue": "sql1testalbo",
            "metadata": {
                "description": "Server Name for Azure database for MySQL"
            }
        },
        "skuCapacity": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Azure database for MySQL compute capacity in vCores (2,4,8,16,32)"
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "GP_Gen4_2",
            "metadata": {
                "description": "Azure database for MySQL sku name "
            }
        },
        "SkuSizeMB": {
            "type": "int",
            "defaultValue": 5120,
            "metadata": {
                "description": "Azure database for MySQL Sku Size "
            }
        },
        "SkuTier": {
            "type": "string",
            "defaultValue": "GeneralPurpose",
            "metadata": {
                "description": "Azure database for MySQL pricing tier"
            }
        },
        "skuFamily": {
            "type": "string",
            "defaultValue": "Gen4",
            "metadata": {
                "description": "Azure database for MySQL sku family"
            }
        },
        "mysqlVersion": {
            "type": "string",
            "allowedValues": [
                "5.6",
                "5.7"
            ],
            "defaultValue": "5.7",
            "metadata": {
                "description": "MySQL version"
            }
        },
		"backupRetentionDays": {
            "type": "int",
            "defaultValue": 7,
            "metadata": {
                "description": "MySQL Server backup retention days"
            }
        },
        "geoRedundantBackup": {
            "type": "string",
            "defaultValue": "Disabled",
            "metadata": {
                "description": "Geo-Redundant Backup setting"
            }
        },
        "applicationGatewaySize": {
            "type": "string",
            "allowedValues": [
                "WAF_Medium",
                "WAF_Large"
            ],
            "defaultValue": "WAF_Medium",
            "metadata": {
                "description": "Application Gateway size"
            }
        },
        "capacity": {
            "type": "int",
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ],
            "defaultValue": 2,
            "metadata": {
                "description": "Number of instances"
            }
        },
        "wafMode": {
            "type": "string",
            "allowedValues": [
                "Detection",
                "Prevention"
            ],
            "defaultValue": "Prevention",
            "metadata": {
                "description": "WAF Mode"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. For example, if stored on a public GitHub repo, you'd use the following URI: https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-webapp-dsc-autoscale."
            },
            "defaultValue": "https://raw.githubusercontent.com/spireob/armtemplates/master/zad9"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  If your artifacts are stored on a public repo or public storage account you can leave this blank."
            }
        },
		
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
		"scriptFolder": ".",
		"scriptFileName": "installiis.ps1",
		"fileToBeCopied": "FileToBeCopied.txt",
		"scriptParameters": "[concat('-artifactsLocation ', parameters('_artifactsLocation'), ' -artifactsLocationSasToken \"', parameters('_artifactsLocationSasToken'), '\" -folderName ', variables('scriptFolder'), ' -fileToInstall ', variables('fileToBeCopied'))]",
		"VMEndpointExample": "VMEndpointAlBo1",
		"availabilitySetName": "myAvSet",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "vm1NicName": "vm1Nic",
        "vm2NicName": "vm2Nic",
        "addressPrefix": "10.0.0.0/16",
        "webSubnetName": "WebSubnet",
        "webSubnetPrefix": "10.0.0.0/24",
        "appGatewaySubnetName": "AppGatewaySubnet",
        "appGatewaySubnetPrefix": "10.0.1.0/24",
		"sqlSubnetName": "SQLSubnet",
        "sqlSubnetPrefix": "10.0.2.0/24",
        "vm1PublicIPAddressName": "vm1PublicIP",
        "vm1PublicIPAddressType": "Dynamic",
        "vm2PublicIPAddressName": "vm2PublicIP",
        "vm2PublicIPAddressType": "Dynamic",
        "vm1IpAddress": "10.0.0.4",
        "vm2IpAddress": "10.0.0.5",
        "vm1Name": "iisvm1",
        "vm2Name": "iisvm2",
        "vmSize": "[parameters('virtualMachineSize')]",
        "virtualNetworkName": "MyVNet",
        "webSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('webSubnetName'))]",
		"sqlSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('sqlSubnetName'))]",
        "webAvailabilitySetName": "IISAvailabilitySet",
		"AvailabilitySetName": "AvailabilitySet",
        "webNsgName": "WebNSG",
		"sqlNsgName": "SQLNSG",
        "appGwNsgName": "AppGwNSG",
        "applicationGatewayName": "ApplicationGateway",
        "appGwPublicIpName": "ApplicationGatewayPublicIp",
		"appGwPublicIpDNSName": "[parameters('ApplicationGatewayPublicDNSName')]",
        "appGatewaySubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('appGatewaySubnetName'))]",
        "appGwPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('appGwPublicIpName'))]",
        "wafEnabled": true,
        "wafMode": "[parameters('wafMode')]",
        "wafRuleSetType": "OWASP",
        "wafRuleSetVersion": "3.0",
        "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',variables('applicationGatewayName'))]",
        "dscZipFullPath": "[concat(parameters('_artifactsLocation'), '/DSC/iisInstall.ps1.zip', parameters('_artifactsLocationSasToken'))]",
        "webConfigFullPath": "[concat(parameters('_artifactsLocation'), '/artifacts/web.config', parameters('_artifactsLocationSasToken'))]",
        "vm1DefaultHtmFullPath": "[concat(parameters('_artifactsLocation'), '/artifacts/vm1.default.htm', parameters('_artifactsLocationSasToken'))]",
        "vm2DefaultHtmFullPath": "[concat(parameters('_artifactsLocation'), '/artifacts/vm2.default.htm', parameters('_artifactsLocationSasToken'))]"
    },
    "resources": [
        {
            "comments": "Availability set for the web servers",
            "type": "Microsoft.Compute/availabilitySets",
            "sku": {
                "name": "Aligned"
            },
            "name": "[variables('webAvailabilitySetName')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "properties": {
                "platformUpdateDomainCount": 2,
                "platformFaultDomainCount": 2,
                "virtualMachines": [
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('vm1Name'))]"
                    },
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('vm2Name'))]"
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vm1Name'))]",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vm2Name'))]"
            ]
        },
		 {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('AvailabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2,
        "managed": true
      }
    },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vm1PublicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('vm1PublicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[concat('publicalbo',variables('vm1Name'),'1')]"
					}
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vm2PublicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('vm2PublicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[concat('publicalbo',variables('vm2Name'),'1')]"
					}
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('appGwPublicIpName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel": "[variables('appGwPublicIpDNSName')]"
				}
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('webNsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow80",
                        "properties": {
                            "description": "Allow 80 from local VNet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
					            {
                        "name": "Allow80TM",
                        "properties": {
                            "description": "Allow 80 from local VNet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "AzureTrafficManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
        
                    {
                        "name": "Allow443",
                        "properties": {
                            "description": "Allow 443 from local VNet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRDP",
                        "properties": {
                            "description": "Allow RDP from everywhere",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('sqlNsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow1433",
                        "properties": {
                            "description": "Allow 1433 from local VNet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1433",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow1444",
                        "properties": {
                            "description": "Allow 1444 from local VNet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1444",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRDP",
                        "properties": {
                            "description": "Allow RDP from everywhere",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('appGwNsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow80",
                        "properties": {
                            "description": "Allow 80 from Internet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow443",
                        "properties": {
                            "description": "Allow 443 from Internet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAppGwProbes",
                        "properties": {
                            "description": "Allow ports for App Gw probes",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "65503-65534 ",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('webNsgName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('appGwNsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('webSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('webSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('webNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('appGatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('appGatewaySubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appGwNsgName'))]"
                            }
                        }
                    },
					{
                        "name": "[variables('sqlSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('sqlSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('webNsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
		
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm1NicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('vm1PublicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigVm1",
                        "properties": {
                            "privateIPAddress": "[variables('vm1IpAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1PublicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('webSubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm2NicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('vm2PublicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigVm2",
                        "properties": {
                            "privateIPAddress": "[variables('vm2IpAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm2PublicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('webSubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-04-30-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vm1Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm1NicName'))]"
            ],
            "properties": {
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
				},
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vm1Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[variables('vm1Name')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName'))]"
                        }
                    ]
                }
            },
            "resources": [
			{
			  "type": "extensions",
			  "name": "CustomScriptExtension",
			  "apiVersion": "2017-03-30",
			  "location": "[parameters('location')]",
			  "dependsOn": [
				"[variables('vm1Name')]"
			  ],
			  "properties": {
				"publisher": "Microsoft.Compute",
				"type": "CustomScriptExtension",
				"typeHandlerVersion": "1.8",
				"autoUpgradeMinorVersion": true,
				"settings": {
				  "fileUris": [
					"[concat(parameters('_artifactsLocation'), '/installiis.ps1', parameters('_artifactsLocationSasToken'))]"
				  ],
				  "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ','installiis.ps1')]"
				}
			  }
			}
			]
        },
        {
            "apiVersion": "2016-04-30-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vm2Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm2NicName'))]",
				"[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ],
            "properties": {
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
				},
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vm2Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[variables('vm2Name')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2NicName'))]"
                        }
                    ]
                }
            },
            "resources": [
			{
			  "type": "extensions",
			  "name": "CustomScriptExtension",
			  "apiVersion": "2017-03-30",
			  "location": "[parameters('location')]",
			  "dependsOn": [
				"[variables('vm2Name')]"
			  ],
			  "properties": {
				"publisher": "Microsoft.Compute",
				"type": "CustomScriptExtension",
				"typeHandlerVersion": "1.8",
				"autoUpgradeMinorVersion": true,
				"settings": {
				  "fileUris": [
					"[concat(parameters('_artifactsLocation'), '/installiis.ps1', parameters('_artifactsLocationSasToken'))]"
				  ],
				  "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', 'installiis.ps1')]"
				}
			  }
			}
		]
        },
        {
            "apiVersion": "2017-12-01",
            "type": "Microsoft.DBforMySQL/servers",
            "location": "[parameters('location')]",
            "name": "[parameters('SQLserverName')]",
            "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('skuTier')]",
                "capacity": "[parameters('skuCapacity')]",
                "size": "[parameters('skuSizeMB')]",
                "family": "[parameters('skuFamily')]"
            },
            "properties": {
                "version": "[parameters('mysqlVersion')]",
                "administratorLogin": "[parameters('adminUsername')]",
                "administratorLoginPassword": "[parameters('adminPassword')]",
                "storageProfile": {
                    "storageMB": "[parameters('skuSizeMB')]",
                    "backupRetentionDays": "[parameters('backupRetentionDays')]",
                    "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
                }
            },
            "resources": [
                {
                    "name": "AllowSubnet",
                    "type": "virtualNetworkRules",
                    "apiVersion": "2017-12-01",
                    "properties": {
                        "virtualNetworkSubnetId": "[variables('sqlSubnetRef')]",
                        "ignoreMissingVnetServiceEndpoint": true
                    },
                    "dependsOn": [
                        "[concat('Microsoft.DBforMySQL/servers/', parameters('SQLserverName'))]"
                    ]
                }
            ]
        },
        {
            "apiVersion": "2017-06-01",
            "name": "[variables('applicationGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('appGwPublicIpName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "[parameters('applicationGatewaySize')]",
                    "tier": "WAF",
                    "capacity": "[parameters('capacity')]"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('appGatewaySubnetRef')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('appGwPublicIPRef')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "appGatewayFrontendPort80",
                        "properties": {
                            "Port": 80
                        }
                    },
                    {
                        "name": "appGatewayFrontendPort443",
                        "properties": {
                            "Port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "appGatewayBackendPool",
                        "properties": {
                            "BackendAddresses": [
                                {
                                    "IpAddress": "[variables('vm1IpAddress')]"
                                },
                                {
                                    "IpAddress": "[variables('vm2IpAddress')]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "appGatewayBackendHttpSettings",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "CookieBasedAffinity": "Disabled"
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "appGatewayHttpListener",
                        "properties": {
                            "FrontendIPConfiguration": {
                                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "FrontendPort": {
                                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort80')]"
                            },
                            "Protocol": "Http",
                            "SslCertificate": null
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "HTTPRule",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                            }
                        }
                    }
                ],
                "webApplicationFirewallConfiguration": {
                    "enabled": "[variables('wafEnabled')]",
                    "firewallMode": "[variables('wafMode')]",
                    "ruleSetType": "[variables('wafRuleSetType')]",
                    "ruleSetVersion": "[variables('wafRuleSetVersion')]",
                    "disabledRuleGroups": []
                }
            }
        },
		{
		  "apiVersion": "2015-11-01",
		  "type": "Microsoft.Network/trafficManagerProfiles",
		  "name": "[variables('VMEndpointExample')]",
		  "location": "global",
		  "dependsOn": [
			"[concat('Microsoft.Network/publicIPAddresses/', variables('vm1PublicIPAddressName'))]",
			"[concat('Microsoft.Network/publicIPAddresses/', variables('vm2PublicIPAddressName'))]",
			"[concat('Microsoft.Compute/virtualMachines/', variables('vm1Name'))]",
			"[concat('Microsoft.Compute/virtualMachines/', variables('vm2Name'))]"
		  ],
		  "properties": {
			"profileStatus": "Enabled",
			"trafficRoutingMethod": "Weighted",
			"dnsConfig": {
			  "relativeName": "[parameters('uniqueDnsName')]",
			  "ttl": 30
			},
			"monitorConfig": {
			  "protocol": "HTTP",
			  "port": 80,
			  "path": "/"
			},
			"endpoints": [
			  {
				"name": "endpoint0",
				"type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
				"properties": {
				  "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('vm1PublicIPAddressName'), ''))]",
				  "endpointStatus": "Enabled",
				  "weight": 1
				}
			  },
			  {
				"name": "endpoint1",
				"type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
				"properties": {
				  "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('vm2PublicIPAddressName'), ''))]",
				  "endpointStatus": "Enabled",
				  "weight": 1
				}
			  }
			]
		  }
		}
    ],
    "outputs": {}
}